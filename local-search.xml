<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>使用WMPFDebugger调试高版本微信小程序</title>
    <link href="/2025/08/30/%E4%BD%BF%E7%94%A8WMPFDebugger%E8%B0%83%E8%AF%95%E9%AB%98%E7%89%88%E6%9C%AC%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    <url>/2025/08/30/%E4%BD%BF%E7%94%A8WMPFDebugger%E8%B0%83%E8%AF%95%E9%AB%98%E7%89%88%E6%9C%AC%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="WMPFDebugger-踩坑日记"><a href="#WMPFDebugger-踩坑日记" class="headerlink" title="WMPFDebugger 踩坑日记"></a>WMPFDebugger 踩坑日记</h1><p>我用的是使用微信 windows 4.0.5.27</p><p><a href="https://github.com/cscnk52/wechat-windows-versions/releases">https://github.com/cscnk52/wechat-windows-versions/releases</a></p><p>要有 node 环境，推荐使用 LTS v22</p><p><img src="/img/LmHYbHwZtombSyxPv5ocXUaSnLf.png"></p><p>安装 yarn</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">npm install --global yarn<br></code></pre></td></tr></table></figure><p><img src="/../../img/UGxrbyqJnovmPqxklR6ci1ZYnRg.png"></p><p><a href="https://github.com/evi0s/WMPFDebugger">https://github.com/evi0s/WMPFDebugger</a></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs http">cd WMPFDebugger<br>yarn<br></code></pre></td></tr></table></figure><p>但直接安装可能会报错，需要有 vs 的构建环境</p><p><img src="/../../img/Qs3HbSwoqoYUnsxOV4WcxBj1nvh.png"></p><p><a href="https://visualstudio.microsoft.com/zh-hans/downloads/">https://visualstudio.microsoft.com/zh-hans/downloads/</a></p><p><img src="/../../img/TtmbboK3QohJMzxBzc6cInL8nMX.png"></p><p>选择 c++ 开发</p><p><img src="/../../img/A3EXb3EyUo7xjNxnvZzcCBrkncL.png"></p><p>在构建的时候可能 frida 会构建出错</p><p><img src="/../../img/PWnRbLwV5oSeXyx3ekFcciWsnec.png"></p><p>可以直接先单独安装 frida，项目使用的是 frida 16.6.6</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">yarn add frida@16.6.6<br></code></pre></td></tr></table></figure><p><img src="/../../img/I7R9b6ErboJMwvxPYWjc30TDnRb.png"></p><p>启动（要先打开微信）</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">npx ts-node src/index.ts<br></code></pre></td></tr></table></figure><p>选择要调试的小程序，打开浏览器，访问 <code>devtools://devtools/bundled/inspector.html?ws=127.0.0.1:62000</code> 即可</p><p><img src="/../../img/LtstbUywQoGtpAxqZJBcrdwxnQc.png"></p><p><img src="/../../img/X95zb45KVoBwRsxBhqTcEepxnRd.png"></p><p>由于为了方便日常微信使用，把低版本微信客户端放到了虚拟机中，但默认默认监听的是 localhost</p><p>修改 index.ts 监听所有网段，可以通过局域网访问</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; promises &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;node:fs&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">EventEmitter</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;node:events&quot;</span>;<br><span class="hljs-keyword">import</span> path <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;node:path&quot;</span>;<br><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> frida <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;frida&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">WebSocket</span>, &#123; <span class="hljs-title class_">WebSocketServer</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;ws&quot;</span>;<br><br><span class="hljs-keyword">const</span> codex = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;./third-party/RemoteDebugCodex.js&quot;</span>);<br><span class="hljs-keyword">const</span> messageProto = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;./third-party/WARemoteDebugProtobuf.js&quot;</span>);<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">DebugMessageEmitter</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">EventEmitter</span> &#123;&#125;;<br><br><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">DEBUG_PORT</span> = <span class="hljs-number">9421</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">CDP_PORT</span> = <span class="hljs-number">62000</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">DEBUG</span> = <span class="hljs-literal">false</span>;<br><br><span class="hljs-keyword">const</span> debugMessageEmitter = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DebugMessageEmitter</span>();<br><br><span class="hljs-keyword">const</span> **bufferToHexString** = <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">_buffer_</span>: <span class="hljs-title class_">ArrayBuffer</span></span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(_buffer_)).<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">_byte_</span> =&gt;</span> _byte_.<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>).<span class="hljs-title function_">padStart</span>(<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;0&#x27;</span>)).<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>);<br>&#125;<br><br><span class="hljs-keyword">const</span> **debug_server** = <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> wss = <span class="hljs-keyword">new</span> <span class="hljs-title class_">WebSocketServer</span>(&#123; <span class="hljs-attr">port</span>: <span class="hljs-variable constant_">DEBUG_PORT</span>, <span class="hljs-attr">host</span>: <span class="hljs-string">&#x27;0.0.0.0&#x27;</span> &#125;);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`[server] debug server running on ws://0.0.0.0:<span class="hljs-subst">$&#123;DEBUG_PORT&#125;</span>`</span>);<br><br>    <span class="hljs-keyword">let</span> messageCounter = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-keyword">const</span> **onMessage** = <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">_message_</span>: <span class="hljs-title class_">ArrayBuffer</span></span>) =&gt;</span> &#123;<br>        <span class="hljs-variable constant_">DEBUG</span> &amp;&amp; <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`[client] received raw message (hex): <span class="hljs-subst">$&#123;bufferToHexString(_message_)&#125;</span>`</span>);<br>        <span class="hljs-keyword">let</span> <span class="hljs-attr">unwrappedData</span>: <span class="hljs-built_in">any</span> = <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">const</span> decodedData = messageProto.<span class="hljs-property">mmbizwxadevremote</span>.<span class="hljs-property">WARemoteDebug_DebugMessage</span>.<span class="hljs-title function_">decode</span>(_message_);<br>            unwrappedData = codex.<span class="hljs-title function_">unwrapDebugMessageData</span>(decodedData);<br>            <span class="hljs-variable constant_">DEBUG</span> &amp;&amp; <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`[client] [DEBUG] decoded data:`</span>);<br>            <span class="hljs-variable constant_">DEBUG</span> &amp;&amp; <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">dir</span>(unwrappedData)<br>        &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">`[client] err: <span class="hljs-subst">$&#123;e&#125;</span>`</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (unwrappedData === <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (unwrappedData.<span class="hljs-property">category</span> === <span class="hljs-string">&quot;chromeDevtoolsResult&quot;</span>) &#123;<br>            _<span class="hljs-comment">// need to proxy to CDP client_</span><br>            debugMessageEmitter.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&quot;cdpmessage&quot;</span>, unwrappedData.<span class="hljs-property">data</span>.<span class="hljs-property">payload</span>);<br>        &#125;<br>    &#125;<br><br>    wss.<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;connection&quot;</span>, <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">_ws_</span>: <span class="hljs-title class_">WebSocket</span></span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[conn] miniapp client connected&quot;</span>);<br>        _ws_.<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;message&quot;</span>, onMessage);<br>        _ws_.<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;error&quot;</span>, <span class="hljs-function">(<span class="hljs-params">_err_</span>) =&gt;</span> &#123;<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&quot;[client] err:&quot;</span>, _err_)&#125;);<br>        _ws_.<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;close&quot;</span>, <span class="hljs-function">() =&gt;</span> &#123;<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[client] client disconnected&quot;</span>)&#125;);<br>    &#125;);<br><br>    debugMessageEmitter.<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;proxymessage&quot;</span>, <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">_message_</span>: <span class="hljs-built_in">string</span></span>) =&gt;</span> &#123;<br>        wss &amp;&amp; wss.<span class="hljs-property">clients</span>.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">_client_</span> =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span> (_client_.<span class="hljs-property">readyState</span> === <span class="hljs-title class_">WebSocket</span>.<span class="hljs-property">OPEN</span>) &#123;<br>                _<span class="hljs-comment">// encode CDP and send to miniapp_</span><br>                _<span class="hljs-comment">// wrapDebugMessageData(data, category, compressAlgo)_</span><br>                <span class="hljs-keyword">const</span> rawPayload = &#123;<br>                    <span class="hljs-attr">jscontext_id</span>: <span class="hljs-string">&quot;&quot;</span>,<br>                    <span class="hljs-attr">op_id</span>: <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<span class="hljs-number">100</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>()),<br>                    <span class="hljs-attr">payload</span>: _message_.<span class="hljs-title function_">toString</span>()<br>                &#125;;<br>                <span class="hljs-variable constant_">DEBUG</span> &amp;&amp; <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(rawPayload);<br>                <span class="hljs-keyword">const</span> wrappedData = codex.<span class="hljs-title function_">wrapDebugMessageData</span>(rawPayload, <span class="hljs-string">&quot;chromeDevtools&quot;</span>, <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">const</span> outData = &#123;<br>                    <span class="hljs-attr">seq</span>: ++messageCounter,<br>                    <span class="hljs-attr">category</span>: <span class="hljs-string">&quot;chromeDevtools&quot;</span>,<br>                    <span class="hljs-attr">data</span>: wrappedData.<span class="hljs-property">buffer</span>,<br>                    <span class="hljs-attr">compressAlgo</span>: <span class="hljs-number">0</span>,<br>                    <span class="hljs-attr">originalSize</span>: wrappedData.<span class="hljs-property">originalSize</span><br>                &#125;<br>                <span class="hljs-keyword">const</span> encodedData = messageProto.<span class="hljs-property">mmbizwxadevremote</span>.<span class="hljs-property">WARemoteDebug_DebugMessage</span>.<span class="hljs-title function_">encode</span>(outData).<span class="hljs-title function_">finish</span>();<br>                _client_.<span class="hljs-title function_">send</span>(encodedData, &#123; <span class="hljs-attr">binary</span>: <span class="hljs-literal">true</span> &#125;);<br>            &#125;<br>        &#125;);<br>    &#125;);<br>&#125;<br><br><span class="hljs-keyword">const</span> **proxy_server** = <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> wss = <span class="hljs-keyword">new</span> <span class="hljs-title class_">WebSocketServer</span>(&#123; <span class="hljs-attr">port</span>: <span class="hljs-variable constant_">CDP_PORT</span>, <span class="hljs-attr">host</span>: <span class="hljs-string">&#x27;0.0.0.0&#x27;</span> &#125;);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`[server] proxy server running on ws://0.0.0.0:<span class="hljs-subst">$&#123;CDP_PORT&#125;</span>`</span>);<br><br>    <span class="hljs-keyword">const</span> **onMessage** = <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">_message_</span>: <span class="hljs-built_in">string</span></span>) =&gt;</span> &#123;<br>        debugMessageEmitter.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&quot;proxymessage&quot;</span>, _message_);<br>    &#125;<br><br>    wss.<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;connection&quot;</span>, <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">_ws_</span>: <span class="hljs-title class_">WebSocket</span></span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[conn] CDP client connected&quot;</span>);<br>        _ws_.<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;message&quot;</span>, onMessage);<br>        _ws_.<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;error&quot;</span>, <span class="hljs-function">(<span class="hljs-params">_err_</span>) =&gt;</span> &#123;<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&quot;[client] CDP err:&quot;</span>, _err_)&#125;);<br>        _ws_.<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;close&quot;</span>, <span class="hljs-function">() =&gt;</span> &#123;<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[client] CDP client disconnected&quot;</span>)&#125;);<br>    &#125;);<br><br>    debugMessageEmitter.<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;cdpmessage&quot;</span>, <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">_message_</span>: <span class="hljs-built_in">string</span></span>) =&gt;</span> &#123;<br>        wss &amp;&amp; wss.<span class="hljs-property">clients</span>.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">_client_</span> =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span> (_client_.<span class="hljs-property">readyState</span> === <span class="hljs-title class_">WebSocket</span>.<span class="hljs-property">OPEN</span>) &#123;<br>                _<span class="hljs-comment">// send CDP message to devtools_</span><br>                _client_.<span class="hljs-title function_">send</span>(_message_);<br>            &#125;<br>        &#125;);<br>    &#125;);<br>&#125;<br><br><span class="hljs-keyword">const</span> **frida_server** = <span class="hljs-title function_">async</span> () =&gt; &#123;<br>    <span class="hljs-keyword">const</span> localDevice = <span class="hljs-keyword">await</span> frida.<span class="hljs-title function_">getLocalDevice</span>();<br>    <span class="hljs-keyword">const</span> processes = <span class="hljs-keyword">await</span> localDevice.<span class="hljs-title function_">enumerateProcesses</span>(&#123;<span class="hljs-attr">scope</span>: frida.<span class="hljs-property">Scope</span>.<span class="hljs-property">Metadata</span>&#125;);<br>    <span class="hljs-keyword">const</span> wmpfProcesses = processes.<span class="hljs-title function_">filter</span>(<span class="hljs-function"><span class="hljs-params">_process_</span> =&gt;</span> _process_.<span class="hljs-property">name</span> === <span class="hljs-string">&quot;WeChatAppEx.exe&quot;</span>);<br>    <span class="hljs-keyword">const</span> wmpfPids = wmpfProcesses.<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">_p_</span> =&gt;</span> _p_.<span class="hljs-property">parameters</span>.<span class="hljs-property">ppid</span> ? _p_.<span class="hljs-property">parameters</span>.<span class="hljs-property">ppid</span> : <span class="hljs-number">0</span>);<br><br>    _<span class="hljs-comment">// find the parent process_</span><br>    <span class="hljs-keyword">const</span> wmpfPid = wmpfPids.<span class="hljs-title function_">sort</span>(<span class="hljs-function">(<span class="hljs-params">_a_, _b_</span>) =&gt;</span> wmpfPids.<span class="hljs-title function_">filter</span>(<span class="hljs-function"><span class="hljs-params">_v_</span> =&gt;</span> _v_ === _a_).<span class="hljs-property">length</span> - wmpfPids.<span class="hljs-title function_">filter</span>(<span class="hljs-function"><span class="hljs-params">_v_</span> =&gt;</span> _v_ === _b_).<span class="hljs-property">length</span>).<span class="hljs-title function_">pop</span>();<br>    <span class="hljs-keyword">if</span> (wmpfPid === <span class="hljs-literal">undefined</span>) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;[frida] WeChatAppEx.exe process not found&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">const</span> wmpfProcess = processes.<span class="hljs-title function_">filter</span>(<span class="hljs-function"><span class="hljs-params">_process_</span> =&gt;</span> _process_.<span class="hljs-property">pid</span> === wmpfPid)[<span class="hljs-number">0</span>];<br>    <span class="hljs-keyword">const</span> wmpfVersionMatch = wmpfProcess.<span class="hljs-property">parameters</span>.<span class="hljs-property">path</span> ? wmpfProcess.<span class="hljs-property">parameters</span>.<span class="hljs-property">path</span>.<span class="hljs-title function_">match</span>(<span class="hljs-regexp">/\d+/g</span>) : <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">const</span> wmpfVersion = wmpfVersionMatch ? <span class="hljs-keyword">new</span> <span class="hljs-title class_">Number</span>(wmpfVersionMatch.<span class="hljs-title function_">pop</span>()) : <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span> (wmpfVersion === <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;[frida] error in find wmpf version&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    _<span class="hljs-comment">// attach to process_</span><br>    <span class="hljs-keyword">const</span> session = <span class="hljs-keyword">await</span> localDevice.<span class="hljs-title function_">attach</span>(wmpfPid);<br><br>    _<span class="hljs-comment">// find hook script_</span><br>    <span class="hljs-keyword">const</span> projectRoot = path.<span class="hljs-title function_">join</span>(path.<span class="hljs-title function_">dirname</span>(<span class="hljs-built_in">require</span>.<span class="hljs-property">main</span> &amp;&amp; <span class="hljs-built_in">require</span>.<span class="hljs-property">main</span>.<span class="hljs-property">filename</span> || process.<span class="hljs-property">mainModule</span> &amp;&amp; process.<span class="hljs-property">mainModule</span>.<span class="hljs-property">filename</span> || process.<span class="hljs-title function_">cwd</span>()), <span class="hljs-string">&quot;..&quot;</span>);<br>    <span class="hljs-keyword">let</span> <span class="hljs-attr">scriptContent</span>: <span class="hljs-built_in">string</span> | <span class="hljs-literal">null</span> = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">try</span> &#123;<br>        scriptContent = (<span class="hljs-keyword">await</span> promises.<span class="hljs-title function_">readFile</span>(path.<span class="hljs-title function_">join</span>(projectRoot, <span class="hljs-string">&quot;frida/hook.js&quot;</span>))).<span class="hljs-title function_">toString</span>();<br>    &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;[frida] hook script not found&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">let</span> <span class="hljs-attr">configContent</span>: <span class="hljs-built_in">string</span> | <span class="hljs-literal">null</span> = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">try</span> &#123;<br>        configContent = (<span class="hljs-keyword">await</span> promises.<span class="hljs-title function_">readFile</span>(path.<span class="hljs-title function_">join</span>(projectRoot, <span class="hljs-string">&quot;frida/config&quot;</span>, <span class="hljs-string">`addresses.<span class="hljs-subst">$&#123;wmpfVersion&#125;</span>.json`</span>))).<span class="hljs-title function_">toString</span>();<br>        configContent = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(configContent));<br>    &#125; <span class="hljs-keyword">catch</span>(e) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">`[frida] version config not found: <span class="hljs-subst">$&#123;wmpfVersion&#125;</span>`</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (scriptContent === <span class="hljs-literal">null</span> || configContent === <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;[frida] unable to find hook script&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    _<span class="hljs-comment">// load script_</span><br>    <span class="hljs-keyword">const</span> script = <span class="hljs-keyword">await</span> session.<span class="hljs-title function_">createScript</span>(scriptContent.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot;@@CONFIG@@&quot;</span>, configContent));<br>    script.<span class="hljs-property">message</span>.<span class="hljs-title function_">connect</span>(<span class="hljs-function"><span class="hljs-params">_message_</span> =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[frida client]&quot;</span>, _message_);<br>    &#125;);<br>    <span class="hljs-keyword">await</span> script.<span class="hljs-title function_">load</span>();<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`[frida] script loaded, WMPF version: <span class="hljs-subst">$&#123;wmpfVersion&#125;</span>, pid: <span class="hljs-subst">$&#123;wmpfPid&#125;</span>`</span>);<br>&#125;<br><br><span class="hljs-keyword">const</span> **main** = <span class="hljs-title function_">async</span> () =&gt; &#123;<br>    <span class="hljs-title function_">debug_server</span>();<br>    <span class="hljs-title function_">proxy_server</span>();<br>    <span class="hljs-title function_">frida_server</span>();<br>&#125;<br><br>(<span class="hljs-title function_">async</span> () =&gt; &#123;<br>    <span class="hljs-keyword">await</span> <span class="hljs-title function_">main</span>();<br>&#125;)();<br></code></pre></td></tr></table></figure><p><strong>如果提示 标签页将处于非活动状态 ，需要将小程序进程移动桌面最上层</strong></p><p><img src="/../../img/GvMnbRfsqoeYwAxI3Pfc5btcnCd.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>远程线程注入-CreateRemoteThread</title>
    <link href="/2025/06/13/%E8%BF%9C%E7%A8%8B%E7%BA%BF%E7%A8%8B%E6%B3%A8%E5%85%A5-CreateRemoteThread/"/>
    <url>/2025/06/13/%E8%BF%9C%E7%A8%8B%E7%BA%BF%E7%A8%8B%E6%B3%A8%E5%85%A5-CreateRemoteThread/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/06/13/hello-world/"/>
    <url>/2025/06/13/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
